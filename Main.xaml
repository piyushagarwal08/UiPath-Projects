<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="933.6,925.6" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="26">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Globalization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="22">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Flowchart DisplayName="Process Workflow" sap:VirtualizedContainerService.HintSize="684.8,760.8" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:Int32" Name="BranchCol" />
      <Variable x:TypeArguments="sd:DataTable" Name="BackExamData" />
      <Variable x:TypeArguments="x:Int32" Name="Skiprowcounter" />
      <Variable x:TypeArguments="sd:DataRow" Name="rowDate" />
      <Variable x:TypeArguments="sd:DataRow" Name="rowTime" />
      <Variable x:TypeArguments="x:Int32" Name="Columncount" />
      <Variable x:TypeArguments="sd:DataRow" Name="rowSubjectname" />
      <Variable x:TypeArguments="sd:DataRow" Name="rowSubjectcode" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="Sheets" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="Count" />
      <Variable x:TypeArguments="x:String" Name="Filepath" />
      <Variable x:TypeArguments="x:String" Name="Program" />
      <Variable x:TypeArguments="x:String" Name="ExcelPath" />
      <Variable x:TypeArguments="x:String" Name="WordPath" />
      <Variable x:TypeArguments="x:String" Name="OutputFolderPath" />
      <Variable x:TypeArguments="x:String" Name="ImagesFolderPath" />
      <Variable x:TypeArguments="x:String" Name="Adate" />
      <Variable x:TypeArguments="x:String" Name="Atime" />
      <Variable x:TypeArguments="x:String" Name="Asubjectcode" />
      <Variable x:TypeArguments="x:String" Name="Aname" />
      <Variable x:TypeArguments="x:Boolean" Name="Check" />
      <Variable x:TypeArguments="x:String" Name="Session" />
      <Variable x:TypeArguments="x:String" Name="Filename" />
      <Variable x:TypeArguments="x:Int32" Name="minpos" />
      <Variable x:TypeArguments="x:Int32" Name="Namecol" />
      <Variable x:TypeArguments="x:Int32" Name="Batchcol" />
      <Variable x:TypeArguments="x:Int32" Name="Rollcol" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
        <av:Point x:Key="ShapeLocation">0,22.4</av:Point>
        <av:Size x:Key="ShapeSize">60,75.2</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">60,60 140,60</av:PointCollection>
        <x:Double x:Key="Width">651.2</x:Double>
        <x:Double x:Key="Height">724</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID9</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">410,77.6</av:Point>
          <av:Size x:Key="ShapeSize">200,144.8</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">410,150 270,150 270,176.4</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="Initialising Data Input&#xA;&gt; Requires Branch&#xA;&gt; Requires Semester&#xA;&gt; Requies Excel File" DisplayName="Reading Input Data" sap:VirtualizedContainerService.HintSize="200,144.8" sap2010:WorkflowViewState.IdRef="Sequence_2">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="Extension" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:InterruptibleDoWhile DisplayName="Do While" sap:VirtualizedContainerService.HintSize="475.2,382.4" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_2">
          <ui:InterruptibleDoWhile.Body>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="375.2,215.2" sap2010:WorkflowViewState.IdRef="Sequence_15">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:MessageBox ChosenButton="{x:Null}" Caption="Select Input File" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="MessageBox_3" Text="[&quot;Please Select an Excel .xlsx File&quot;]" />
              <ui:SelectFile DisplayName="Select Input File" Filter="All files (*.*)|*.*" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="SelectFile_1" SelectedFile="[Filepath]" />
            </Sequence>
          </ui:InterruptibleDoWhile.Body>
          <ui:InterruptibleDoWhile.Condition>
            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="Path.GetExtension(Filepath) &lt;&gt; &quot;.xlsx&quot;" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
          </ui:InterruptibleDoWhile.Condition>
        </ui:InterruptibleDoWhile>
        <ui:ReadTextFile Content="[WordPath]" DisplayName="Microsoft Word Path" FileName="C:\ProgramData\UiPath\Packages\Team 7\InputSetupFiles\WordApplicationPath.txt" sap:VirtualizedContainerService.HintSize="475.2,80.8" sap2010:WorkflowViewState.IdRef="ReadTextFile_2" />
        <ui:ReadTextFile Content="[OutputFolderPath]" DisplayName="Output Folder Path" FileName="C:\ProgramData\UiPath\Packages\Team 7\InputSetupFiles\OutputFolderPath.txt" sap:VirtualizedContainerService.HintSize="475.2,80.8" sap2010:WorkflowViewState.IdRef="ReadTextFile_3" />
        <ui:ReadTextFile Content="[ImagesFolderPath]" DisplayName="Images Folder Path" FileName="C:\ProgramData\UiPath\Packages\Team 7\InputSetupFiles\ImagesFolderPath.txt" sap:VirtualizedContainerService.HintSize="475.2,80.8" sap2010:WorkflowViewState.IdRef="ReadTextFile_4" />
        <Sequence DisplayName="Read Sheet Names" sap:VirtualizedContainerService.HintSize="475.2,380" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:Boolean" Name="ExcelOpen" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Open Excel &amp; Get Sheets" sap:VirtualizedContainerService.HintSize="433.6,224.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" WorkbookPath="[Filepath]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="241.6,115.2" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelGetWorkbookSheets DisplayName="Get Sheets Name" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_1" Sheets="[Sheets]" />
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ExcelApplicationScope>
          <ui:KillProcess ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Close Excel File" sap:VirtualizedContainerService.HintSize="433.6,22.4" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="Excel" />
        </Sequence>
        <Assign DisplayName="Branch Name" sap:VirtualizedContainerService.HintSize="475.2,60" sap2010:WorkflowViewState.IdRef="Assign_2">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[Filename]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[Path.GetFileNameWithoutExtension(Filepath)]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:CreateDirectory ContinueOnError="True" DisplayName="Create Output Folder" sap:VirtualizedContainerService.HintSize="475.2,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" Path="[OutputFolderPath+&quot;\Output&quot;]" />
        <ui:Delete ContinueOnError="True" sap:VirtualizedContainerService.HintSize="475.2,22.4" sap2010:WorkflowViewState.IdRef="Delete_2" Path="C:\ProgramData\UiPath\Packages\Team 7\AdmitCardCouldNotBeGenerated.csv" />
        <ui:AppendLine DisplayName="Admit Card Not Generated" FileName="C:\ProgramData\UiPath\Packages\Team 7\AdmitCardCouldNotBeGenerated.csv" sap:VirtualizedContainerService.HintSize="475.2,134.4" sap2010:WorkflowViewState.IdRef="AppendLine_1" Text="Error Reason,Check" />
      </Sequence>
      <FlowStep.Next>
        <FlowDecision x:Name="__ReferenceID0" Condition="[Count&lt;Sheets.Count]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79.2,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <av:Point x:Key="ShapeLocation">230.4,176.4</av:Point>
              <av:Size x:Key="ShapeSize">79.2,87.2</av:Size>
              <av:PointCollection x:Key="TrueConnector">230.4,220 100,220 100,239.6</av:PointCollection>
              <av:PointCollection x:Key="FalseConnector">309.6,220 339.6,220 339.6,400 420,400</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <FlowDecision.True>
            <FlowStep x:Name="__ReferenceID5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">0,239.6</av:Point>
                  <av:Size x:Key="ShapeSize">200,160.8</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">100,400.4 100,425.6</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence sap2010:Annotation.AnnotationText="&gt; Create Folder Branch-SheetName&#xA;&gt; Read Sheet from Workbook&#xA;&gt; Initialize few more variables" DisplayName="Pre-Processing" sap:VirtualizedContainerService.HintSize="200,160.8" sap2010:WorkflowViewState.IdRef="Sequence_5">
                <Sequence.Variables>
                  <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="reg" />
                  <Variable x:TypeArguments="scg:Dictionary(x:String, x:Int32)" Default="[new Dictionary(Of String,Int32) From {{&quot;A&quot;,0},{&quot;B&quot;,1},{&quot;C&quot;,2},{&quot;D&quot;,3},{&quot;E&quot;,4},{&quot;F&quot;,5},{&quot;G&quot;,6},{&quot;H&quot;,7},{&quot;I&quot;,8},{&quot;J&quot;,9},{&quot;K&quot;,10},{&quot;L&quot;,11},{&quot;M&quot;,12},{&quot;N&quot;,13},{&quot;O&quot;,14},{&quot;P&quot;,15},{&quot;Q&quot;,16},{&quot;R&quot;,17},{&quot;S&quot;,18},{&quot;T&quot;,19}}]" Name="ExcelColumnDictionary" />
                  <Variable x:TypeArguments="x:String" Name="ABatch" />
                  <Variable x:TypeArguments="x:String" Name="ARoll" />
                  <Variable x:TypeArguments="x:String" Name="ABranch" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="Find Time,Date,Name,Subject Address" sap:VirtualizedContainerService.HintSize="475.2,1178.4" sap2010:WorkflowViewState.IdRef="Sequence_8">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Boolean" Name="ExcelOpen" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Open Excel &amp; Find Cell Addresses" sap:VirtualizedContainerService.HintSize="433.6,1023.2" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" WorkbookPath="[Filepath]">
                    <ui:ExcelApplicationScope.Body>
                      <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Look Up Required Ranges" sap:VirtualizedContainerService.HintSize="375.2,913.6" sap2010:WorkflowViewState.IdRef="Sequence_7">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ExcelLookUpRange DisplayName="LookUp Date" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_1" Result="[Adate]" SheetName="[Sheets(Count)]" Value="Date">
                            <ui:ExcelLookUpRange.Range>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </ui:ExcelLookUpRange.Range>
                          </ui:ExcelLookUpRange>
                          <ui:ExcelLookUpRange DisplayName="LookUp Time" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_2" Result="[Atime]" SheetName="[Sheets(Count)]" Value="Time">
                            <ui:ExcelLookUpRange.Range>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </ui:ExcelLookUpRange.Range>
                          </ui:ExcelLookUpRange>
                          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                            <ui:CommentOut.Body>
                              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="375.2,180.8" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ExcelLookUpRange DisplayName="LookUp Sub. Code" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_3" Result="[Asubjectcode]" SheetName="[Sheets(Count)]" Value="Sub. Code">
                                  <ui:ExcelLookUpRange.Range>
                                    <InArgument x:TypeArguments="x:String">
                                      <Literal x:TypeArguments="x:String" Value="" />
                                    </InArgument>
                                  </ui:ExcelLookUpRange.Range>
                                </ui:ExcelLookUpRange>
                              </Sequence>
                            </ui:CommentOut.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:CommentOut>
                          <ui:ExcelLookUpRange DisplayName="LookUp Name" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_4" Result="[Aname]" SheetName="[Sheets(Count)]" Value="Name of Student">
                            <ui:ExcelLookUpRange.Range>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </ui:ExcelLookUpRange.Range>
                          </ui:ExcelLookUpRange>
                          <ui:ExcelLookUpRange DisplayName="LookUp Range" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_5" Result="[ARoll]" SheetName="[Sheets(Count)]" Value="Registration Number of Student">
                            <ui:ExcelLookUpRange.Range>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </ui:ExcelLookUpRange.Range>
                          </ui:ExcelLookUpRange>
                          <ui:ExcelLookUpRange DisplayName="LookUp Range" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_6" Result="[ABatch]" SheetName="[Sheets(Count)]" Value="Batch of Student ( Eg. 2019-22, 2018-21, 2018-20 etc.)">
                            <ui:ExcelLookUpRange.Range>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </ui:ExcelLookUpRange.Range>
                          </ui:ExcelLookUpRange>
                          <ui:ExcelLookUpRange DisplayName="LookUp Range" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_7" Result="[ABranch]" SheetName="[Sheets(Count)]" Value="Select your branch">
                            <ui:ExcelLookUpRange.Range>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </ui:ExcelLookUpRange.Range>
                          </ui:ExcelLookUpRange>
                        </Sequence>
                      </ActivityAction>
                    </ui:ExcelApplicationScope.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ExcelApplicationScope>
                  <ui:KillProcess ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Close Excel File for Every Sheet" sap:VirtualizedContainerService.HintSize="433.6,22.4" sap2010:WorkflowViewState.IdRef="KillProcess_2" ProcessName="Excel" />
                </Sequence>
                <Delay DisplayName="Delay for 2 Seconds" Duration="00:00:02" sap:VirtualizedContainerService.HintSize="475.2,22.4" sap2010:WorkflowViewState.IdRef="Delay_3" />
                <ui:CreateDirectory ContinueOnError="True" DisplayName="Create Folder for Sheet Name" sap:VirtualizedContainerService.HintSize="475.2,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[OutputFolderPath+&quot;\Output\&quot;+Filename+&quot;-&quot;+Sheets(Count)]" />
                <ui:ReadRange AddHeaders="False" DataTable="[BackExamData]" DisplayName="Read Input File of Specific Sheet from Workbook" sap:VirtualizedContainerService.HintSize="475.2,88" sap2010:WorkflowViewState.IdRef="ReadRange_2" SheetName="[Sheets(Count)]" WorkbookPath="[Filepath]">
                  <ui:ReadRange.Range>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </ui:ReadRange.Range>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ReadRange>
                <Sequence DisplayName="Initialise Pre processing Time" sap:VirtualizedContainerService.HintSize="475.2,1245.6" sap2010:WorkflowViewState.IdRef="Sequence_16">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign ColumnCount" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[Columncount]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[BackExamData.Columns.Count-1]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign date array" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataRow">[rowDate]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataRow">[BackExamData.Rows(integer.Parse(Adate.Substring(1))-1)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign Time array" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataRow">[rowTime]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataRow">[BackExamData.Rows(integer.Parse(Atime.Substring(1))-1)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                    <ui:CommentOut.Body>
                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_18">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign Subject Code Array" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataRow">[rowSubjectcode]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataRow">[BackExamData.Rows(integer.Parse(Asubjectcode.Substring(1))-1)]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ui:CommentOut.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:CommentOut>
                  <Assign DisplayName="Assign Subject Name array" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataRow">[rowSubjectname]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataRow">[BackExamData.Rows(integer.Parse(Aname.Substring(1))-1)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign skipper count" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[Skiprowcounter]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Get Branch Name Column" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[BranchCol]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[ExcelColumnDictionary(ABranch.Substring(0,1))]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign Session ~ 3rd row" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[Session]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[BackExamData.Rows(2).ItemArray(0).ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign minimum index of array" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[minpos]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[ExcelColumnDictionary(Adate.Substring(0,1))]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Find name entries column" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[Namecol]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[ExcelColumnDictionary(Aname.Substring(0,1))]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Find Batch entries column" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[Batchcol]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[ExcelColumnDictionary(ABatch.Substring(0,1))]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Find Roll number entries column" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[Rollcol]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[ExcelColumnDictionary(ARoll.Substring(0,1))]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </Sequence>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">0,425.6</av:Point>
                      <av:Size x:Key="ShapeSize">200,128.8</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">200,490 260,490 260,526.4</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="&gt; Checks for File Validity&#xA;&gt; Calculates Proper no of columns&#xA;" DisplayName="Invoke FileChecker workflow" sap:VirtualizedContainerService.HintSize="200,128.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="FileChecker.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InOutArgument x:TypeArguments="x:Int32" x:Key="io_Columncount">[Columncount]</InOutArgument>
                      <InArgument x:TypeArguments="sd:DataRow" x:Key="in_rowDate">[rowDate]</InArgument>
                      <InArgument x:TypeArguments="sd:DataRow" x:Key="in_rowTime">[rowTime]</InArgument>
                      <InArgument x:TypeArguments="sd:DataRow" x:Key="in_rowSubjectcode">[rowSubjectcode]</InArgument>
                      <InArgument x:TypeArguments="sd:DataRow" x:Key="in_rowSubjectname">[rowSubjectname]</InArgument>
                      <OutArgument x:TypeArguments="x:Boolean" x:Key="o_Check">[Check]</OutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Sheetname">[Sheets(Count)]</InArgument>
                      <InArgument x:TypeArguments="x:Int32" x:Key="in_Minpos">[minpos]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <FlowStep.Next>
                    <FlowDecision x:Name="__ReferenceID7" Condition="[Check]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79.2,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <av:Point x:Key="ShapeLocation">220.4,526.4</av:Point>
                          <av:Size x:Key="ShapeSize">79.2,87.2</av:Size>
                          <av:PointCollection x:Key="TrueConnector">220.4,570 100,570 100,611.6</av:PointCollection>
                          <av:PointCollection x:Key="FalseConnector">299.6,570 370,570</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <FlowDecision.True>
                        <FlowStep x:Name="__ReferenceID2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">0,611.6</av:Point>
                              <av:Size x:Key="ShapeSize">200,96.8</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">200,660 230,660 230,720 520,720 520,690</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Invokes the Admit Card Generator Sequence" DisplayName="Invoke Word Generate Back Card workflow" sap:VirtualizedContainerService.HintSize="200,96.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Word Generate Back Card.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:Int32" x:Key="in_Branch">[BranchCol]</InArgument>
                              <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_BackExamData">[BackExamData]</InArgument>
                              <InOutArgument x:TypeArguments="x:Int32" x:Key="io_Skiprowcounter">[Skiprowcounter]</InOutArgument>
                              <InArgument x:TypeArguments="sd:DataRow" x:Key="in_rowDate">[rowDate]</InArgument>
                              <InArgument x:TypeArguments="sd:DataRow" x:Key="in_rowTime">[rowTime]</InArgument>
                              <InArgument x:TypeArguments="x:Int32" x:Key="in_Columns">[Columncount]</InArgument>
                              <InArgument x:TypeArguments="sd:DataRow" x:Key="in_rowSubjectname">[rowSubjectname]</InArgument>
                              <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_Sheets">[Sheets]</InArgument>
                              <InArgument x:TypeArguments="x:Int32" x:Key="in_Count">[Count]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_Program">[Program]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_Wordpath">[WordPath]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_ImagesFolder">[ImagesFolderPath]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_OutputFolder">[OutputFolderPath]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_Aname">[Aname]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_Session">[Session]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_Filename">[Filename]</InArgument>
                              <InArgument x:TypeArguments="x:Int32" x:Key="in_Minpos">[minpos]</InArgument>
                              <InArgument x:TypeArguments="x:Int32" x:Key="in_Rollcol">[Rollcol]</InArgument>
                              <InArgument x:TypeArguments="x:Int32" x:Key="in_Namecol">[Namecol]</InArgument>
                              <InArgument x:TypeArguments="x:Int32" x:Key="in_Batchcol">[Batchcol]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeWorkflowFile>
                          <FlowStep.Next>
                            <FlowStep x:Name="__ReferenceID1">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">388.8,630</av:Point>
                                  <av:Size x:Key="ShapeSize">262.4,60</av:Size>
                                  <av:PointCollection x:Key="ConnectorLocation">520,630 520,600 550,600 550,496.4 270,496.4 270,263.6</av:PointCollection>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Iterator for different Sheets" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[Count]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[Count+1]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <FlowStep.Next>
                                <x:Reference>__ReferenceID0</x:Reference>
                              </FlowStep.Next>
                            </FlowStep>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowDecision.True>
                      <FlowDecision.False>
                        <FlowStep x:Name="__ReferenceID8">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">370,558.8</av:Point>
                              <av:Size x:Key="ShapeSize">200,22.4</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">470,581.2 470,611.2 358.8,611.2 358.8,660 388.8,660</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:Delete ContinueOnError="{x:Null}" DisplayName="Delete Invalid Sheet Folder" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[OutputFolderPath+&quot;\Output\&quot;+Filename+&quot;-&quot;+Sheets(Count)]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:Delete>
                          <FlowStep.Next>
                            <x:Reference>__ReferenceID1</x:Reference>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowDecision.False>
                    </FlowDecision>
                  </FlowStep.Next>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowDecision.True>
          <FlowDecision.False>
            <FlowStep x:Name="__ReferenceID4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">420,351.6</av:Point>
                  <av:Size x:Key="ShapeSize">200,96.8</av:Size>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" sap2010:Annotation.AnnotationText="Message stating the End of Bot Process" DisplayName="End Process" sap:VirtualizedContainerService.HintSize="200,96.8" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="[&quot;Process Completed... please check the Outputs Folder&quot;]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:MessageBox>
            </FlowStep>
          </FlowDecision.False>
        </FlowDecision>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID2</x:Reference>
    <FlowStep x:Name="__ReferenceID9">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">140,3.6</av:Point>
          <av:Size x:Key="ShapeSize">200,112.8</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">340,60 510,60 510,77.6</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" sap2010:Annotation.AnnotationText="Greeting Message from Developers&#xA;" DisplayName="Greetings" sap:VirtualizedContainerService.HintSize="200,112.8" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[&quot;Welcome to Back Admit Card Generator &quot;+vbCrLf+&quot;Made by&quot;+vbCrLf+&quot;~Piyush Agarwal&quot;+vbCrLf+&quot;~Pratiksha Jain&quot;]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MessageBox>
      <FlowStep.Next>
        <x:Reference>__ReferenceID3</x:Reference>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
    <x:Reference>__ReferenceID8</x:Reference>
  </Flowchart>
</Activity>